# Generated by ariadne-codegen
# Source: queries.gql

from typing import Annotated, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import CollectionFileReference


class CollectionFile(BaseModel):
    collection_file: Optional[
        Annotated[
            Union[
                "CollectionFileCollectionFileCollectionFile",
                "CollectionFileCollectionFileCollectionFileNotFound",
            ],
            Field(discriminator="typename__"),
        ]
    ] = Field(alias="collectionFile")


class CollectionFileCollectionFileCollectionFile(CollectionFileReference):
    typename__: Literal["CollectionFile"] = Field(alias="__typename")


class CollectionFileCollectionFileCollectionFileNotFound(BaseModel):
    typename__: Literal["CollectionFileNotFound"] = Field(alias="__typename")


CollectionFile.model_rebuild()
