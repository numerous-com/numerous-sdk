# Generated by ariadne-codegen
# Source: queries.gql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class CollectionDocumentReference(BaseModel):
    id: str
    key: str


class CollectionDocumentWithData(BaseModel):
    id: str
    key: str
    data: Any
    tags: List["CollectionDocumentWithDataTags"]


class CollectionDocumentWithDataTags(BaseModel):
    key: str
    value: str


class CollectionFileNotFound(BaseModel):
    id: str


class CollectionFileReference(BaseModel):
    id: str
    key: str
    download_url: Optional[str] = Field(alias="downloadURL")
    upload_url: Optional[str] = Field(alias="uploadURL")
    tags: List["CollectionFileReferenceTags"]


class CollectionFileReferenceTags(BaseModel):
    key: str
    value: str


class CollectionNotFound(BaseModel):
    id: str


class CollectionReference(BaseModel):
    id: str
    key: str


CollectionDocumentReference.model_rebuild()
CollectionDocumentWithData.model_rebuild()
CollectionFileNotFound.model_rebuild()
CollectionFileReference.model_rebuild()
CollectionNotFound.model_rebuild()
CollectionReference.model_rebuild()
