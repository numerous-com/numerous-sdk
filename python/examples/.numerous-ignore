# Numerous Collection Ignore File
# 
# This file uses gitignore-style syntax to specify which files and directories
# should be excluded from bulk upload operations.
#
# Syntax:
#   - Lines starting with # are comments
#   - Blank lines are ignored
#   - * matches any characters except path separators
#   - ** matches any characters including path separators
#   - ? matches any single character except path separators
#   - ! at the start of a line negates the pattern
#   - Patterns ending with / match directories only
#
# Place this file in the root directory of your collection to be uploaded.

# === COMMON TEMPORARY FILES ===
*.tmp
*.temp
*.cache
*.swp
*.swo
*~

# === LOG FILES ===
*.log
logs/
debug/

# === SYSTEM FILES ===
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# === PYTHON DEVELOPMENT ===
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# PyTest
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# === NODE.JS / JAVASCRIPT ===
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# === JAVA / ANDROID ===
*.class
*.jar
*.war
*.ear
*.aar
target/
.gradle/
build/
.gradletasknamecache

# === .NET / C# ===
bin/
obj/
*.user
*.suo
*.userosscache
*.sln.docstates
*.userprefs
packages/
*.nupkg
*.snupkg

# === RUST ===
target/
**/*.rs.bk
Cargo.lock

# === GO ===
*.exe
*.exe~
*.dll
*.so
*.dylib
*.test
*.out
vendor/

# === ARCHIVES AND COMPRESSED FILES ===
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
*.bz2
*.xz

# === MEDIA FILES (Large) ===
*.mp4
*.avi
*.mkv
*.mov
*.wmv
*.flv
*.webm
*.m4v

# === DATABASE FILES ===
*.db
*.sqlite
*.sqlite3
*.mdb

# === EDITOR AND IDE FILES ===
.vscode/
.idea/
*.swp
*.swo
*~
.project
.classpath
.settings/

# === VERSION CONTROL ===
.git/
.gitignore
.svn/
.hg/

# === DOCUMENTATION BUILD ===
_build/
.doctrees/
docs/_build/

# === CONFIGURATION SECRETS ===
config/secrets/
*.key
*.pem
*.p12
*.pfx
secrets.json
.secrets

# === EXAMPLE NEGATION PATTERNS ===
# Include specific important files even if they match above patterns
!important.log
!config/example.env
!docs/build/index.html

# === PROJECT-SPECIFIC PATTERNS ===
# Add your own project-specific ignore patterns below:

# Example: Ignore all .txt files in a specific directory
# data/temp/*.txt

# Example: Ignore all files in test directories recursively
# **/test/**

# Example: Ignore specific file types in any subdirectory
# **/*.bak
# **/*.orig 